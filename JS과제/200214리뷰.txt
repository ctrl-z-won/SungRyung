1. 일급 객체(first-class object)란?
다른 객체들에 일반적으로 적용 가능한 연산을 모두 지원하는 객체.
함수에 파라미터로 함수가 들어갈 수도, 함수를 리턴할 수도 있음.


2. 원시 타입과 객체 타입의 차이점? (변수 할당 방식에 있어서의 차이점)
원시 타입은 변수 할당 방식에 있어 그 값 그대로 변수가 저장되고, 
객체 타입은 객체의 메모리 주소를 참조하고 있음


3. 호이스팅은 무엇인가?
변수 선언이 끌어올려지는 것처럼 보이는 것. 
선언문이 해당 스코프의 맨 앞으로 옮겨진 것처럼 동작하는 특성


4. call-by-value vs call-by-reference
call-by-value : 변수에 할당할 때, 그 값 그대로 변수에 저장 (원시 타입)
call-by-reference : 메모리 주소를 변수에 저장 (객체 타입)


5. 호이스팅이란?
----


6. 변수 호이스팅 vs 함수 호이스팅
변수 호이스팅 : 변수 선언을 한 그 위치에서 할당됨
함수 호이스팅 : 함수 선언의 위치와 관계없이 소스 내 어디에서든지 호출 가능


7. 함수 표현식이란? 함수 표현식 예제 코드 작성해보기
var plusnum = function(num) {
	return num+num; 
};


8. 전역 스코프 vs 지역 스코프, 전역 변수 vs 지역 변수
전역은 통용되는 것, 지역은 특정 부분(자신 또는 하위 함수)에서만 사용할 수 있는 것


9. 블록 레벨 스코프란?
코드 블록 내에서 독립적인 스코프가 생긴다는 것 ({})


10. 함수 레벨 스코프란?
"함수" 코드 블록 내에서 독립적인 스코프가 생긴다는 것


11. 렉시컬 스코프?
정적 스코프. 함수 선언 방식으로 스코프를 따른 경우


12. 렉시컬 스코프는 스코프를 어떻게 결정하나?
함수를 어디에 선언했는지에 따라 결정.결정.